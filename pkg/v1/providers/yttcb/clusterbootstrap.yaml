#@ load("@ytt:data", "data")
#@ load("lib/helpers.star", "get_tkr_version_from_tkr_name")

#@ def antrea_configs_exist():
#@   return (data.values.NSXT_POD_ROUTING_ENABLED or
#@           data.values.ANTREA_NO_SNAT or
#@           data.values.ANTREA_TRAFFIC_ENCAP_MODE != "encap" or
#@           not data.values.ANTREA_PROXY or
#@           not data.values.ANTREA_ENDPOINTSLICE or
#@           not data.values.ANTREA_POLICY or
#@           data.values.ANTREA_NODEPORTLOCAL or
#@           not data.values.ANTREA_TRACEFLOW or
#@           data.values.ANTREA_EGRESS or
#@           data.values.ANTREA_FLOWEXPORTER or
#@           data.values.ANTREA_DISABLE_UDP_TUNNEL_OFFLOAD)
#@ end

#@ def vspherecsi_configs_exist():
#@   return (not data.values.VSPHERE_INSECURE or
#@           data.values.USE_TOPOLOGY_CATEGORIES)
#@ end

#@ def should_create_clusterbootstrap():
#@   return data.values.CNI != "antrea" or antrea_configs_exist() or vspherecsi_configs_exist()
#@ end

#@ if should_create_clusterbootstrap():
---
apiVersion: run.tanzu.vmware.com/v1alpha3
kind: ClusterBootstrap
metadata:
  name: #@ data.values.CLUSTER_NAME
  namespace: #@ data.values.NAMESPACE
  annotations:
    tkg.tanzu.vmware.com/add-missing-fields-from-tkr: #@ "{}".format(get_tkr_version_from_tkr_name(data.values.KUBERNETES_RELEASE))
spec:
  cni:
    #@ if data.values.CNI == "antrea":
    refName: antrea*
    valuesFrom:
      providerRef:
        apiGroup: cni.tanzu.vmware.com
        kind: AntreaConfig
        name: #@ data.values.CLUSTER_NAME
    #@ elif data.values.CNI == "calico":
    refName: calico*
    valuesFrom:
      providerRef:
        apiGroup: cni.tanzu.vmware.com
        kind: CalicoConfig
        name: #@ data.values.CLUSTER_NAME
    #@ end
  #@ if vspherecsi_configs_exist() and data.values.PROVIDER_TYPE == "vsphere" and not data.values.IS_WINDOWS_WORKLOAD_CLUSTER:
  csi:
    refName: vsphere-csi*
    valuesFrom:
      providerRef:
        apiGroup: csi.tanzu.vmware.com
        kind: VSphereCSIConfig
        name: #@ data.values.CLUSTER_NAME
  #@ end
  additionalPackages:
    - refName: metrics-server*
    - refName: secretgen-controller*
#@ end

---
#@ if antrea_configs_exist():
apiVersion: cni.tanzu.vmware.com/v1alpha1
kind: AntreaConfig
metadata:
  name: #@ data.values.CLUSTER_NAME
  namespace: #@ data.values.NAMESPACE
spec:
  antrea:
    config:
      #@ if data.values.NSXT_POD_ROUTING_ENABLED:
      trafficEncapMode: "noEncap"
      noSNAT: true
      #@ else:
      trafficEncapMode: #@ data.values.ANTREA_TRAFFIC_ENCAP_MODE
      noSNAT: #@ data.values.ANTREA_NO_SNAT
      #@ end
      disableUdpTunnelOffload: #@ data.values.ANTREA_DISABLE_UDP_TUNNEL_OFFLOAD
      featureGates:
        #@ if data.values.NSXT_POD_ROUTING_ENABLED:
        AntreaProxy: true
        #@ else:
        AntreaProxy: #@ data.values.ANTREA_PROXY
        #@ end
        EndpointSlice: #@ data.values.ANTREA_ENDPOINTSLICE
        AntreaPolicy: #@ data.values.ANTREA_POLICY
        NodePortLocal: #@ data.values.ANTREA_NODEPORTLOCAL
        AntreaTraceflow: #@ data.values.ANTREA_TRACEFLOW
        Egress: #@ data.values.ANTREA_EGRESS
        FlowExporter: #@ data.values.ANTREA_FLOWEXPORTER
#@ end

---
#@ if data.values.CNI == "calico":
apiVersion: cni.tanzu.vmware.com/v1alpha1
kind: CalicoConfig
metadata:
  name: #@ data.values.CLUSTER_NAME
  namespace: #@ data.values.NAMESPACE
#@ end
---
#@ if vspherecsi_configs_exist() and data.values.PROVIDER_TYPE == "vsphere" and not data.values.IS_WINDOWS_WORKLOAD_CLUSTER:
apiVersion: csi.tanzu.vmware.com/v1alpha1
kind: VSphereCSIConfig
metadata:
  name: #@ data.values.CLUSTER_NAME
  namespace: #@ data.values.NAMESPACE
spec:
  vsphereCSI:
    mode: vsphereCSI
    config:
      #@ if data.values.VSPHERE_INSECURE:
      insecureFlag: #@ data.values.VSPHERE_INSECURE
      #@ else:
      tlsThumbprint: #@ data.values.VSPHERE_TLS_THUMBPRINT
      #@ end
      datacenter: #@ data.values.VSPHERE_DATACENTER
      zone: #@ data.values.VSPHERE_ZONE
      region: #@ data.values.VSPHERE_REGION
      useTopologyCategories: #@ data.values.USE_TOPOLOGY_CATEGORIES
#@ end

